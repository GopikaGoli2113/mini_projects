# -*- coding: utf-8 -*-
"""python otp_verification.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KbNlr-GW0wKoVGABkpcvUAwMeiOlysc2
"""

import smtplib    #Sends emails using an SMTP server
import random     #Generates a random 6-digit OTP
import time       #Adds delays to improve user experience
from email.message import EmailMessage     #Creates and sends emails

# Email Credentials (Use App Password for Gmail)
EMAIL_ADDRESS = "gopikasaraswathi@gmail.com"
EMAIL_PASSWORD = "apbe fujd oquc efkb" #go to security and then go for a 2 step verification and go through app password create a password and paste it here.

# Function to Generate OTP
def generate_otp():
    return str(random.randint(100000, 999999)) #Uses random.randint(100000, 999999) to generate a random 6-digit OTP

# Function to Send OTP via Email
def send_otp(recipient_email, otp):
    try:
        msg = EmailMessage()
        msg.set_content(f"Your OTP Code is: {otp}")
        msg["Subject"] = "Your OTP Code"
        msg["From"] = EMAIL_ADDRESS
        msg["To"] = recipient_email #Creates an email message

        # Connect to SMTP Server
        with smtplib.SMTP_SSL("smtp.gmail.com", 465) as server:
            server.login(EMAIL_ADDRESS, EMAIL_PASSWORD)
            server.send_message(msg)  #Logs into Gmail SMTP server (smtp.gmail.com)

        print(f"✅ OTP sent successfully to {recipient_email}")    #Sends the OTP to the user’s email

    except Exception as e:
        print(f"❌ Error sending email: {e}") #Handles errors (e.g., wrong credentials, no internet, etc.)

# Function to Verify OTP
def verify_otp(original_otp):
    attempts = 3
    while attempts > 0:
        user_otp = input("Enter the OTP sent to your email: ")
        if user_otp == original_otp:
            print("✅ Access Granted! OTP Verified.") #If correct → ✅ Access Granted
            return True
        else:
            attempts -= 1
            print(f"❌ Incorrect OTP. {attempts} attempts remaining.")  #If incorrect → ❌ Retry up to 3 times

    print("❌ Access Denied! Too many failed attempts.")  #If all attempts fail → ❌ Access Denied
    return False

# Main Execution
if __name__ == "__main__":
    recipient = input("Enter your email address: ") #User inputs their email
    otp = generate_otp()   #OTP is generated
    send_otp(recipient, otp) #OTP is sent via email
    time.sleep(2)  # Wait before asking for input and User is prompted to enter OTP
    verify_otp(otp) #OTP is verified